name: Continuous integration

env:
  DEFAULT_PYTHON: 3.9

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Enable manual run
  workflow_dispatch:

jobs:
  test:
    name: Python ${{ matrix.python_version }}
    runs-on: ubuntu-latest
    env:
      TOX_POSARGS: -- --cov=. --cov-report=xml -ra -vv
    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          cache: pip

      - name: Upgrade packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: python -m pip install --upgrade codecov tox

      - name: Run tox targets for Python ${{ matrix.python_version }}
        run: tox run -f py$(echo ${{ matrix.python_version }} | tr -d .) ${{ env.TOX_POSARGS }}

      - name: Upload Coverage to Codecov
        if: ${{ matrix.python_version == env.DEFAULT_PYTHON }}
        uses: codecov/codecov-action@v3

  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install dependencies
        run: pip install -U setuptools wheel build
      - name: Build
        run: python -m build .

  black:
    name: Coding style - black
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run black
        uses: psf/black@stable
        with:
          options: "--check"

  flake8:
    name: Coding style - flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install dependencies
        run: pip install flake8 pep8-naming flake8-bugbear
      - name: Run flake8
        uses: liskin/gh-problem-matcher-wrap@v2
        with:
          linters: flake8
          run: flake8

  isort:
    name: Coding style - isort
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install dependencies
        run: pip install isort
      - name: Run isort
        uses: liskin/gh-problem-matcher-wrap@v2
        with:
          linters: isort
          run: isort -c .
